From 97c69d234662832c0dfab187158d5d10a6c94457 Mon Sep 17 00:00:00 2001
From: Kurt Kiefer <kurt.kiefer@arthrex.com>
Date: Thu, 21 Jul 2022 17:46:27 -0700
Subject: [PATCH] Support cross build

---
 cmake/Cuda.cmake | 8 --------
 1 file changed, 8 deletions(-)

diff --git a/cmake/Cuda.cmake b/cmake/Cuda.cmake
index e11f8d4..f2a97b2 100644
--- a/cmake/Cuda.cmake
+++ b/cmake/Cuda.cmake
@@ -153,20 +153,12 @@ endif()
 include_directories(SYSTEM ${CUDA_INCLUDE_DIRS})
 list(APPEND gloo_DEPENDENCY_LIBS ${CUDA_CUDART_LIBRARY})
 
-# Setting nvcc arch flags (or inherit if already set)
-if (NOT ";${CUDA_NVCC_FLAGS};" MATCHES ";-gencode;")
-  gloo_select_nvcc_arch_flags(NVCC_FLAGS_EXTRA)
-  list(APPEND CUDA_NVCC_FLAGS ${NVCC_FLAGS_EXTRA})
-  message(STATUS "Added CUDA NVCC flags for: ${NVCC_FLAGS_EXTRA_readable}")
-endif()
-
 # Disable some nvcc diagnostic that apears in boost, glog, glags, opencv, etc.
 foreach(diag cc_clobber_ignored integer_sign_change useless_using_declaration set_but_not_used)
   gloo_list_append_if_unique(CUDA_NVCC_FLAGS -Xcudafe --diag_suppress=${diag})
 endforeach()
 
 # If the project including us doesn't set any -std=xxx directly, we set it to C++11 here.
-set(CUDA_PROPAGATE_HOST_FLAGS OFF)
 if((NOT "${CUDA_NVCC_FLAGS}" MATCHES "-std=c\\+\\+") AND (NOT "${CUDA_NVCC_FLAGS}" MATCHES "-std=gnu\\+\\+"))
   if(NOT MSVC)
     gloo_list_append_if_unique(CUDA_NVCC_FLAGS "-std=c++11")
