From 3bf9909ae8f3b201013cbc15f95a71390faeabcd Mon Sep 17 00:00:00 2001
From: Kurt Kiefer <kurt.kiefer@arthrex.com>
Date: Fri, 22 Jul 2022 16:48:52 -0700
Subject: [PATCH] cuda.cmake: compatibility with cuda.bbclass

---
 cmake/TorchConfig.cmake.in |  2 +-
 cmake/public/cuda.cmake    | 15 ++-------------
 2 files changed, 3 insertions(+), 14 deletions(-)

diff --git a/cmake/TorchConfig.cmake.in b/cmake/TorchConfig.cmake.in
index 0d8b15bd..576f0787 100644
--- a/cmake/TorchConfig.cmake.in
+++ b/cmake/TorchConfig.cmake.in
@@ -152,7 +152,7 @@ if(@USE_CUDA@)
       ${CUDA_TOOLKIT_ROOT_DIR}/lib/libnvToolsExt.dylib
       ${CUDA_LIBRARIES})
   else()
-    find_library(LIBNVTOOLSEXT libnvToolsExt.so PATHS ${CUDA_TOOLKIT_ROOT_DIR}/lib64/)
+    find_library(LIBNVTOOLSEXT libnvToolsExt.so HINTS ${CMAKE_CUDA_TOOLKIT_TARGET_DIR} PATH_SUFFIXES lib lib64 lib/x64)
     set(TORCH_CUDA_LIBRARIES
       ${CUDA_CUDA_LIB}
       ${CUDA_NVRTC_LIB}
diff --git a/cmake/public/cuda.cmake b/cmake/public/cuda.cmake
index 30d3b52d..afa69447 100644
--- a/cmake/public/cuda.cmake
+++ b/cmake/public/cuda.cmake
@@ -191,7 +191,7 @@ find_library(CUDA_CUDA_LIB cuda
     PATHS ${CUDA_TOOLKIT_ROOT_DIR}
     PATH_SUFFIXES lib lib64 lib/stubs lib64/stubs lib/x64)
 find_library(CUDA_NVRTC_LIB nvrtc
-    PATHS ${CUDA_TOOLKIT_ROOT_DIR}
+    HINTS ${CMAKE_CUDA_TOOLKIT_TARGET_DIR}
     PATH_SUFFIXES lib lib64 lib/x64)
 if(CUDA_NVRTC_LIB AND NOT CUDA_NVRTC_SHORTHASH)
   if("${PYTHON_EXECUTABLE}" STREQUAL "")
@@ -271,7 +271,7 @@ elseif(APPLE)
       ${CUDA_TOOLKIT_ROOT_DIR}/lib/libnvToolsExt.dylib)
 
 else()
-  find_library(LIBNVTOOLSEXT libnvToolsExt.so PATHS ${CUDA_TOOLKIT_ROOT_DIR}/lib64/)
+  find_library(LIBNVTOOLSEXT libnvToolsExt.so HINTS ${CMAKE_CUDA_TOOLKIT_TARGET_DIR} PATH_SUFFIXES lib lib64 lib/x64)
   set_property(
       TARGET torch::nvtoolsext PROPERTY INTERFACE_LINK_LIBRARIES
       ${LIBNVTOOLSEXT})
@@ -436,13 +436,6 @@ if(MSVC AND CMAKE_GENERATOR STREQUAL "Ninja" AND NOT DEFINED ENV{CUDAHOSTCXX})
   list(APPEND CUDA_NVCC_FLAGS "--use-local-env")
 endif()
 
-# setting nvcc arch flags
-torch_cuda_get_nvcc_gencode_flag(NVCC_FLAGS_EXTRA)
-# CMake 3.18 adds integrated support for architecture selection, but we can't rely on it
-set(CMAKE_CUDA_ARCHITECTURES OFF)
-list(APPEND CUDA_NVCC_FLAGS ${NVCC_FLAGS_EXTRA})
-message(STATUS "Added CUDA NVCC flags for: ${NVCC_FLAGS_EXTRA}")
-
 # disable some nvcc diagnostic that appears in boost, glog, glags, opencv, etc.
 foreach(diag cc_clobber_ignored integer_sign_change useless_using_declaration
              set_but_not_used field_without_dll_interface
@@ -502,9 +495,5 @@ list(APPEND CUDA_NVCC_FLAGS "--expt-relaxed-constexpr")
 list(APPEND CUDA_NVCC_FLAGS "--expt-extended-lambda")
 
 foreach(FLAG ${CUDA_NVCC_FLAGS})
-  string(FIND "${FLAG}" " " flag_space_position)
-  if(NOT flag_space_position EQUAL -1)
-    message(FATAL_ERROR "Found spaces in CUDA_NVCC_FLAGS entry '${FLAG}'")
-  endif()
   string(APPEND CMAKE_CUDA_FLAGS " ${FLAG}")
 endforeach()
